rm(list = ls())
library(tidyverse); library(ggthemes); library(viridis)
jvProjects <- read_csv("Temp Data/JV Data/jv.csv") %>%
select(projectCountry, projectName, reportingCompany, paymentType, projectPayment, proportionPay) %>%
gather(key = "valueType", value = "value", projectPayment, proportionPay) %>%
mutate(valueType = factor(valueType, levels = c("proportionPay", "projectPayment"), labels = c("Payment Proportion", "Actual Payment (in USD)"))) %>%
arrange(projectCountry, projectName, reportingCompany)
rm(list = setdiff(ls(), c("sourceData", "projectData", "entityData", "currentLookup", "currentSecondary", "snlData")))
library(tidyverse); library(ggthemes); library(kableExtra); library(knitr); library(viridis); library(readxl); library(stringr); library(googlesheets)
if(!exists("sourceData")){ ##so that we only run on first load
sourceData <- read_excel("../../Data Cleaning/Payment Data Pipeline/data/Current website data/allDataNew.xlsx", sheet = "sources")
projectData <- read_excel("../../Data Cleaning/Payment Data Pipeline/data/Current website data/allDataNew.xlsx", sheet = "projects")
entityData <- read_excel("../../Data Cleaning/Payment Data Pipeline/data/Current website data/allDataNew.xlsx", sheet = "entities")
}
if(!exists("snlData")){
snlCmdtyLocData <- read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_all_comdty_location.xls", sheet = 1) %>%
mutate_at(16:17, as.character) %>%
bind_rows(., read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_all_comdty_location_inactive.xls", sheet = 1)) %>%
select(-(`Property Name`))
snlOwnership <- read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_ownership.xls", sheet = 1) %>%
bind_rows(., read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_ownership_inactive.xls", sheet = 1)) %>%
select(-(`Property Name`))
snlFinancing <- read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_financing.xls", sheet = 1) %>%
bind_rows(., read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_financing_inactive.xls", sheet = 1)) %>%
gather(key = "round", value = "amt", -(1:2)) %>%
mutate(amt = as.numeric(amt)) %>%
group_by(`Property ID`) %>%
summarise(totalFinance = sum(amt, na.rm = T)) %>%
mutate(totalFinance = ifelse(totalFinance == 0, NA, totalFinance))
snlProduction <- read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_production.xls", sheet = 1) %>%
bind_rows(., read_excel("../../Data Cleaning/Secondary Data/Projects/Data/Secondary data sources/snl_production_inactive.xls", sheet = 1)) %>%
gather(key = "name", value = "value", -(1:2)) %>%
mutate(value = as.numeric(value)) %>%
filter(!is.na(value)) %>%
arrange(`Property ID`, desc(value)) %>%
group_by(`Property ID`) %>%
filter(row_number() < 3) %>%
summarise(avgProduction = mean(value, na.rm = T))
snlData <- left_join(snlCmdtyLocData, snlOwnership, by = "Property ID") %>%
left_join(., snlFinancing, by = "Property ID") %>%
left_join(., snlProduction, by = "Property ID")
rm(snlCmdtyLocData, snlOwnership, snlFinancing, snlProduction)
}
if(!exists("currentLookup")){
gs_auth("/Users/hsubhash/Documents/GitHub/resource-project-data/token.rds")
currentLookup <- gs_title("Current Lookup") %>%
gs_read(ws = "Current Matched Lookup", verbose = F)
currentSecondary <- gs_title("Current Secondary") %>%
gs_read(ws = "Secondary Data", verbose = F)
currentSecondary <- currentSecondary %>%
mutate(projectType = case_when(
str_detect(str_to_lower(projectType), "corporate") ~ "Corporate",
str_detect(str_to_lower(projectType), "oil") ~ "Oil & Gas",
str_detect(str_to_lower(projectType), "mining") ~ "Mining",
str_detect(str_to_lower(projectType), "other") ~ "Other"
)) %>%
mutate(locationType = case_when(
str_detect(str_to_lower(locationType), "exact") ~ "Exact",
str_detect(str_to_lower(locationType), "capital") ~ "Regional Capital",
str_detect(str_to_lower(locationType), "nearest town") ~ "Nearest Town",
str_detect(str_to_lower(locationType), "estimated") ~ "Estimated"
)) %>%
mutate(commodity = ifelse(commodity == ",,,", NA, commodity)) %>%
filter(paste0(projectCountry, finalName) %in% paste0(currentLookup$projectCountry, currentLookup$finalName)) %>%
select(-sources, -notes, -duplicates)
}
jvProjects <- projectData %>%
mutate(projectPayment = as.numeric(projectPayment)) %>%
filter(!is.na(projectPayment) & projectPayment != 0) %>%
left_join(., currentLookup %>%
select(1:4), by = c("projectCountry", "reportingCompany", "projectName" = "rawName")) %>%
mutate(projectName = ifelse(is.na(finalName), projectName, finalName)) %>%
group_by(projectCountry, reportingCompany, projectName, paymentType, reportYear) %>%
summarise(projectPayment = sum(projectPayment, na.rm = T)) %>%
group_by(projectCountry, projectName, reportYear) %>%
filter(n_distinct(reportingCompany) > 1) %>%
filter(projectName != "Corporate") %>%
ungroup() %>%
left_join(., currentSecondary, by = c("projectCountry", "projectName" = "finalName")) %>%
filter(!is.na(projectCountry) | projectCountry != "x") %>%
filter(!str_detect(str_to_lower(projectName), "alberta|columbia|other|general|gulf of mexico|attribu|operated|entity|exploration|united states of")) %>%
filter(projectName != "x" & projectName != "Bc") %>%
arrange(projectCountry, projectName, reportingCompany, paymentType)
jvProjects <- jvProjects %>%
group_by(projectCountry, reportingCompany, projectName) %>%
mutate(totalPay = sum((projectPayment), na.rm = T)) %>%
ungroup() %>%
mutate(proportionPay = projectPayment/totalPay) %>%
write_csv(., "Temp Data/JV Data/jv.csv")
rm(list = ls())
library(tidyverse); library(ggthemes); library(viridis)
jvProjects <- read_csv("Temp Data/JV Data/jv.csv") %>%
select(projectCountry, projectName, reportingCompany, paymentType, projectPayment, proportionPay) %>%
gather(key = "valueType", value = "value", projectPayment, proportionPay) %>%
mutate(valueType = factor(valueType, levels = c("proportionPay", "projectPayment"), labels = c("Payment Proportion", "Actual Payment (in USD)"))) %>%
arrange(projectCountry, projectName, reportingCompany)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName)
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
print(ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
)
}
rm(list = ls())
library(tidyverse); library(ggthemes); library(viridis)
jvProjects <- read_csv("Temp Data/JV Data/jv.csv") %>%
select(projectCountry, projectName, reportingCompany, paymentType, projectPayment, proportionPay) %>%
gather(key = "valueType", value = "value", projectPayment, proportionPay) %>%
mutate(valueType = factor(valueType, levels = c("proportionPay", "projectPayment"), labels = c("Payment Proportion", "Actual Payment (in USD)"))) %>%
arrange(projectCountry, projectName, reportingCompany)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName) %>%
arrange(projectCountry, projectName)
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
print(ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
)
}
View(jvNames)
View(jvNames)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName) %>%
arrange(projectCountry, projectName)
plotList <- list()
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
plotList[i] <- ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
}
plotList <- vector("list", length(jvNames$projectName))
rm(list = ls())
library(tidyverse); library(ggthemes); library(viridis)
jvProjects <- read_csv("Temp Data/JV Data/jv.csv") %>%
select(projectCountry, projectName, reportingCompany, paymentType, projectPayment, proportionPay) %>%
gather(key = "valueType", value = "value", projectPayment, proportionPay) %>%
mutate(valueType = factor(valueType, levels = c("proportionPay", "projectPayment"), labels = c("Payment Proportion", "Actual Payment (in USD)"))) %>%
arrange(projectCountry, projectName, reportingCompany)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName) %>%
arrange(projectCountry, projectName)
plotList <- vector("list", length(jvNames$projectName))
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
plotList[i] <- ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
}
View(plotList)
View(plotList)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName) %>%
arrange(projectCountry, projectName)
plotList <- vector("list", length(jvNames$projectName))
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
plotList[[i]] <- ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
}
lapply(plotList, function(x) print(x))
plotList[[1]]$layers
plotList[[1]]$plot_env
print(plotList[[1]]$plot_env)
print(plotList[[1]])
sapply(plotList[[1]], print)
sapply(plotList[[1]], function print(x[[]]))
sapply(plotList[[1]], function(x) print(x[[]]))
print(plotList[[1]])
sapply(plotList[[1]], function(x) print(x[[.]]))
sapply(plotList[[1]], function(x) print(x[[1]]))
sapply(plotList[[1]], function(x) print(x))
lapply(plotList[[1]], function(x) print(x))
for(i in 1:length(plotList[1:2])){
print(plotList[[i]])
}
rm(list = ls())
library(tidyverse); library(ggthemes); library(viridis)
jvProjects <- read_csv("Temp Data/JV Data/jv.csv") %>%
select(projectCountry, projectName, reportingCompany, paymentType, projectPayment, proportionPay) %>%
gather(key = "valueType", value = "value", projectPayment, proportionPay) %>%
mutate(valueType = factor(valueType, levels = c("proportionPay", "projectPayment"), labels = c("Payment Proportion", "Actual Payment (in USD)"))) %>%
arrange(projectCountry, projectName, reportingCompany)
jvNames <- jvProjects %>%
distinct(projectCountry, projectName) %>%
arrange(projectCountry, projectName)
plotList <- vector("list", length(jvNames$projectName))
for(i in 1:length(jvNames$projectName)){
chartData <- jvProjects %>%
filter(projectName == jvNames$projectName[i])
titleName <- paste0(jvNames$projectName[i], ", ", jvNames$projectCountry[i])
plotList[[i]] <- ggplot(chartData, aes(y = value, x = reportingCompany, fill = factor(paymentType))) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
facet_wrap(~valueType, scales = "free_x") +
theme_tufte() +
labs(title = titleName,
x = "Reporting Company") +
scale_fill_viridis(discrete = T) +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.title.x = element_blank()
)
}
for(i in 1:length(plotList)){
print(plotList[[i]])
}
