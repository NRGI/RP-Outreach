ggplot(., aes(x = reorder(entityLevel, -totalPayment), y = totalPayment)) +
geom_col() +
coord_flip() +
theme_fivethirtyeight()
left_join(entityData, entitySecondary, by = c("entityCountry", "entityName")) %>%
filter(!is.na(entityLevel)) %>%
group_by(entityLevel) %>%
summarise(totalPayment = sum(entityPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(entityLevel, -totalPayment), y = round(totalPayment/1e9, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in billions of USD)") +
theme(
axis.title = element_text(size = 11),
axis.title.y = element_blank()
)
knitr::include_graphics("images/shellTable.png")
rmarkdown::render(input = "intro_rp.Rmd", output_dir = "../../../nrgi_reports")
#rmarkdown::render(input = "/Users/hsubhash/Documents/GitHub/RP Outreach/Blogs/Intro to RP/intro_rp.Rmd", output_dir = "/Users/hsubhash/Documents/GitHub/nrgi_reports/intro_rp")
rm(list = ls())
library(tint); library(tidyverse); library(googlesheets); library(lubridate); library(ggthemes)
# invalidate cache when the package version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tint'), fig.width = 4, fig.asp = 0.618, out.width = "95%")
options(htmltools.dir.version = FALSE)
suppressMessages(
rawSources <- gs_title("Raw Data Dump") %>%
gs_read(ws = "Source", verbose = F)
)
suppressMessages(
projectSecondary <- gs_title("Final Secondary - Project") %>%
gs_read(ws = "Data", verbose = F)
)
suppressMessages(
entitySecondary <- gs_title("Final Secondary - Govt. Entities") %>%
gs_read(ws = "Data", verbose = F)
)
sourceData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allSource.csv")
projectData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allProject.csv")
entityData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allEntity.csv")
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 2.8) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 2.8) +
theme_fivethirtyeight()
# +
#     labs(y = str_wrap("Total payments", width = 24),
#          x = "Financial year") +
#     theme_fivethirtyeight() +
#     theme(
#         axis.title = element_text()
#     )
ggsave(filename = "plots/fig1.png")
getwd()
list.dirs(getwd())
ggsave(filename = "plots/fig1.png")
ggsave(filename = "/plots/fig1.png")
list.files("plots")
ggsave(filename = "fig1.png", path = "plots")
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 2.8) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 2.8) +
theme_fivethirtyeight()
# +
#     labs(y = str_wrap("Total payments", width = 24),
#          x = "Financial year") +
#     theme_fivethirtyeight() +
#     theme(
#         axis.title = element_text()
#     )
list.files("plots")
ggsave(filename = "fig1.png", path = "plots")
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 2.8) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 2.8) +
theme_fivethirtyeight()
# +
#     labs(y = str_wrap("Total payments", width = 24),
#          x = "Financial year") +
#     theme_fivethirtyeight() +
#     theme(
#         axis.title = element_text()
#     )
list.files("plots")
ggsave(filename = "fig1.png", path = "plots/")
ggsave(filename = "fig1.png", plot = last_plot(), device = "png", path = "plots")
ls(getwd())
list.dirs(getwd())
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 2.8) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 2.8) +
theme_fivethirtyeight()
# +
#     labs(y = str_wrap("Total payments", width = 24),
#          x = "Financial year") +
#     theme_fivethirtyeight() +
#     theme(
#         axis.title = element_text()
#     )
ggsave(filename = "fig1.png", plot = last_plot(), device = "png", path = "plots")
ggsave(filename = "fig1.png", path = "plots")
projectData %>%
left_join(., projectSecondary, by = c("projectCountry", "projectName")) %>%
filter(!is.na(projectType) & projectCountry == "Mexico")%>%
group_by(projectType) %>%
summarise(totalPayment = sum(projectPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(projectType, -totalPayment), y = round(totalPayment/1e6, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in millions of USD)") +
theme(
axis.title = element_text(size = 11),
axis.title.y = element_blank()
)
ggsave(filename = "fig5.png", path = "plots")
left_join(entityData, entitySecondary, by = c("entityCountry", "entityName")) %>%
filter(!is.na(entityLevel)) %>%
group_by(entityLevel) %>%
summarise(totalPayment = sum(entityPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(entityLevel, -totalPayment), y = round(totalPayment/1e9, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in billions of USD)") +
theme(
axis.title = element_text(size = 11),
axis.title.y = element_blank()
)
ggsave(filename = "fig6.png", path = "plots")
library(tidyverse)
library(nycflights13)
hourlyDelay <- flights %>%
group_by(hour) %>%
summarise(meanDelay = mean(dep_delay, na.rm = T))
ggplot(data = hourlyDelay, mapping = aes(x = hour, y = meanDelay)) +
geom_point()
flights %>%
mutate(newHour = lubridate::hour(time_hour)) %>%
filter(newHour == 1)
ggplot(hourlyDelay, aes(x = hour, y = meanDelay)) +
geom_line()
ggplot(hourlyDelay, aes(x = hour, y = meanDelay)) +
geom_col()
ggplot(flights, aes(arr_delay)) +
geom_histogram(bins = 200)
ggplot(flights, aes(dest)) +
geom_bar()
hourlyOriginDelay <- flights %>%
group_by(hour, origin) %>%
summarise(meanDelay = mean(dep_delay, na.rm = T))
hourlyOriginDelay
ggplot(hourlyOriginDelay, aes(x = hour, y = meanDelay)) +
geom_point() +
facet_wrap(~origin)
ggplot(hourlyOriginDelay, aes(x = hour, y = meanDelay)) +
geom_point() +
geom_line() +
facet_wrap(~origin)
ggplot(hourlyOriginDelay, aes(x = hour, y = meanDelay)) +
geom_point() +
geom_smooth() +
facet_wrap(~origin)
library(gapminder)
gapminder
sample(1:10)
?sample
sample_n(1:10)
head(gapminder)
head(gapminder, n = 10)
tail(gapminder, n = 10)
str(gapminder)
glimpse(gapminder)
names(gapminder)
ggplot(economics, aes(date, unemploy)) + geom_line()
ggplot(economics_long, aes(date, value01, colour = variable)) +
geom_line()
economics
gapminder
ggplot(data = gapminder, aes(pop)) +
geom_histogram()
ggplot(data = gapminder, aes(gdpPercap)) +
geom_histogram()
ggplot(data = gapminder, aes(gdpPercap)) +
geom_histogram(binwidth = 100)
gapminder %>%
group_by(country) %>%
filter(year == min(year, na.rm = T)) %>%
ggplot(aes(gdpPercap)) +
geom_histogram(binwidth = 100)
gapminder %>%
group_by(country) %>%
filter(year == min(year, na.rm = T)) %>%
ggplot(aes(gdpPercap)) +
geom_histogram(binwidth = 10)
gapminder %>%
group_by(country) %>%
filter(year == min(year, na.rm = T)) %>%
ggplot(aes(gdpPercap)) +
geom_histogram(binwidth = 10000)
gapminder %>%
group_by(country) %>%
filter(year == min(year, na.rm = T)) %>%
ggplot(aes(gdpPercap)) +
geom_histogram(binwidth = 1000)
#rmarkdown::render(input = "/Users/hsubhash/Documents/GitHub/RP Outreach/Blogs/Intro to RP/intro_rp.Rmd", output_dir = "/Users/hsubhash/Documents/GitHub/nrgi_reports/intro_rp")
rm(list = ls())
library(tint); library(tidyverse); library(googlesheets); library(lubridate); library(ggthemes)
# invalidate cache when the package version changes
knitr::opts_chunk$set(tidy = FALSE, cache.extra = packageVersion('tint'), fig.width = 4, fig.asp = 0.618, out.width = "95%")
options(htmltools.dir.version = FALSE)
suppressMessages(
rawSources <- gs_title("Raw Data Dump") %>%
gs_read(ws = "Source", verbose = F)
)
suppressMessages(
projectSecondary <- gs_title("Final Secondary - Project") %>%
gs_read(ws = "Data", verbose = F)
)
suppressMessages(
entitySecondary <- gs_title("Final Secondary - Govt. Entities") %>%
gs_read(ws = "Data", verbose = F)
)
sourceData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allSource.csv")
projectData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allProject.csv")
entityData <- read_csv("/Users/hsubhash/Documents/GitHub/resource-project-data/Data Pipeline/All Data Backups/Current website data/allEntity.csv")
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 4) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 4) +
theme_fivethirtyeight()
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 6) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 6) +
theme_fivethirtyeight()
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 5) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 5) +
theme_fivethirtyeight()
ggsave(filename = "fig1.png", path = "plots")
projectData %>%
left_join(., projectSecondary, by = c("projectCountry", "projectName")) %>%
filter(!is.na(projectType) & projectCountry == "Mexico")%>%
group_by(projectType) %>%
summarise(totalPayment = sum(projectPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(projectType, -totalPayment), y = round(totalPayment/1e6, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in millions of USD)") +
theme(
axis.title = element_text(size = 14),
axis.title.y = element_blank()
)
ggsave(filename = "fig5.png", path = "plots")
projectData %>%
left_join(., projectSecondary, by = c("projectCountry", "projectName")) %>%
filter(!is.na(projectType) & projectCountry == "Mexico")%>%
group_by(projectType) %>%
summarise(totalPayment = sum(projectPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(projectType, -totalPayment), y = round(totalPayment/1e6, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in millions of USD)") +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
axis.title.y = element_blank()
)
projectData %>%
left_join(., projectSecondary, by = c("projectCountry", "projectName")) %>%
filter(!is.na(projectType) & projectCountry == "Mexico")%>%
group_by(projectType) %>%
summarise(totalPayment = sum(projectPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(projectType, -totalPayment), y = round(totalPayment/1e6, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in millions of USD)") +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
axis.title.y = element_blank()
)
ggsave(filename = "fig5.png", path = "plots")
left_join(entityData, entitySecondary, by = c("entityCountry", "entityName")) %>%
filter(!is.na(entityLevel)) %>%
group_by(entityLevel) %>%
summarise(totalPayment = sum(entityPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(entityLevel, -totalPayment), y = round(totalPayment/1e9, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in billions of USD)")  +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
axis.title.y = element_blank()
)
ggsave(filename = "fig6.png", path = "plots")
projectData %>%
left_join(., projectSecondary, by = c("projectCountry", "projectName")) %>%
filter(!is.na(projectType) & projectCountry == "Mexico")%>%
group_by(projectType) %>%
summarise(totalPayment = sum(projectPayment, na.rm = T)) %>%
ggplot(., aes(x = reorder(projectType, -totalPayment), y = round(totalPayment/1e6, 1))) +
geom_col() +
coord_flip() +
theme_fivethirtyeight() +
labs(y = "Payments (in millions of USD)") +
theme(
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
axis.title.y = element_blank()
)
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 5) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 5) +
theme_fivethirtyeight()
projectData %>%
filter(reportYear != 2018) %>%
group_by(reportYear) %>%
summarise(totalPayments = sum(projectPayment)) %>%
ggplot(., aes(x = reportYear, y = (totalPayments/1e9))) +
geom_line() +
annotate(geom = "text", x = 2014, y = 125, label = "Payments (in billions of USD)", angle = "90", vjust = 1.1, size = 5) +
annotate(geom = "text", x = 2017, y = 0, label = "Financial year", hjust = 0.8, vjust = -0.5, size = 5) +
theme_fivethirtyeight()
# +
#     labs(y = str_wrap("Total payments", width = 24),
#          x = "Financial year") +
#     theme_fivethirtyeight() +
#     theme(
#         axis.title = element_text()
#     )
ggsave(filename = "fig1.png", path = "plots")
gapminder %>%
group_by(year) %>%
summarise(meanPop = mean(pop, na.rm = T))
gapminder %>%
group_by(year) %>%
summarise(meanPop = mean(pop, na.rm = T)) %>%
ggplot(aes(x = year, y = meanPop)) +
geom_col()
gapminder %>%
ggplot(aes(x = pop, y = gdpPercap)) +
geom_point()
gapminder %>%
group_by(country) %>%
filter(year == min(year)) %>%
ggplot(aes(x = pop, y = gdpPercap)) +
geom_point()
gapminder %>%
group_by(country) %>%
filter(year == min(year)) %>%
ggplot(aes(x = pop, y = log(gdpPercap))) +
geom_point()
gapminder %>%
group_by(country) %>%
filter(year == min(year)) %>%
ggplot(aes(x = log(pop), y = log(gdpPercap))) +
geom_point()
log(1000, base = 10)
log(1000, base = 20)
ggplot(gapminder %>%
filter(year > 2000),
aes(x = year, y = gdpPercap)) +
geom_boxplot()
ggplot(gapminder %>%
filter(year > 2000),
aes(x = year, y = gdpPercap, group = year)) +
geom_boxplot()
ggplot(gapminder %>%
filter(year > 2000),
aes(y = gdpPercap, group = year)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = year, y = gdpPercap)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = factor(year), y = gdpPercap)) +
geom_boxplot()
n_distinct(gapminder$year)
unique(gapminder$year)
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = (year), y = gdpPercap)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = (year), y = gdpPercap, group = year)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = factor(year), y = gdpPercap, group = year)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(y = gdpPercap, group = year)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = as.character(year), y = gdpPercap)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = as.character(year), y = gdpPercap)) +
geom_boxplot()
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = as.character(year), y = gdpPercap)) +
geom_boxplot() +
facet_wrap(~continent)
gapminder %>%
filter(year > 2000) %>%
ggplot(aes(x = as.character(year), y = gdpPercap)) +
geom_boxplot() +
facet_wrap(~continent, nrow = 1)
gapminder %>%
pull(pop) -> popu
library(tidyverse); library(nycflights13)
flightCarrier <- flights$carrier %>%
unique(flightCarrier)
flights$carrier %>%
unique()
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP)) +
geom_line()
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line()
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl()
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl(aes(label = continent))
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl(aes(label = continent), "last.qp")
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl(aes(label = continent), method = "last.qp")
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl(aes(label = continent), method = "last.bumpup")
gapminder %>%
group_by(continent, year) %>%
summarise(meanGDP = mean(gdpPercap, na.rm = T)) %>%
ggplot(aes(x = year, y = meanGDP, colour = continent)) +
geom_line() +
directlabels::geom_dl(aes(label = continent), method = "last.bumpup")
